{"version":3,"sources":["stores/header/reducer.js","stores/store.js","services/utils.js","sharedComponents/classComponents/header/Header.tsx","pages/login/LoginPage.tsx","pages/users/UsersPage.tsx","pages/home/HomePage.tsx","pages/verify/VerifyPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["initialState","roles","links","reducer","state","action","type","newState","val","data","indexOf","push","newLinks","forEach","link","length","permissable","perm","role","store","createStore","token","res","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","err","Header","props","noHeaders","anchorEl","saEl","headerVisible","this","unlisten","history","listen","location","console","log","setHeaderVisibility","subscribe","localStorage","getItem","parsed","utils","updateRoles","path","pathname","setState","clear","window","href","e","preventDefault","el","d","className","onClick","event","openSA","currentTarget","display","Menu","open","Boolean","onClose","closeSA","menuItems","item","index","MenuItem","key","to","generateMenuButton","openPopover","Avatar","src","Popover","openLoginMenu","anchorOrigin","vertical","horizontal","transformOrigin","logout","React","Component","connect","dispatch","withRouter","cmp","cancelTokenSource","username","password","cancel","axios","CancelToken","source","post","cancelToken","then","setItem","h","params","search","isVerified","catch","error","onSubmit","loginSubmit","TextField","required","value","onChange","target","label","variant","Button","color","UsersPage","lastQuery","rows","useStyles","loadUsers","get","users","createData","uuid","verified","active","superAdmin","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","scope","HomePage","VerifyPage","loaded","hasToken","tokenVerified","emailVerifyError","parts","redirectUrl","authToken","substring","setTimeout","successFn","url","interceptors","request","use","headers","match","response","status","Promise","reject","App","exact","render","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6fb8effb.chunk.js","sourcesContent":["const initialState = {\n    roles:[],\n    links:[{\n      \"path\":\"/home\",\n      \"id\":\"HOME\",\n      \"display\":\"⿳\",\n      \"roles\":[],\n    },{\n      \"id\":\"SUPERADMIN\",\n      \"display\":\"Superadmin\",\n      \"roles\":[\"SUPERADMIN\"],\n      \"menuItems\":[{\n        \"path\":\"/users\",\n        \"id\":\"USERS\",\n        \"display\":\"Manage Users\",\n      }]\n    }]\n};\n\nconst reducer = (state = initialState, action) => {\n  if(action.type === 'UPDATE_ROLES') {\n    let newState = {...state};\n    if(action.val.data && newState.roles.indexOf(action.val.data) === -1)\n      newState.roles.push(action.val.data);\n    \n    let newLinks = [];\n    newState.links.forEach((link)=>{\n      if(link.roles.length === 0)\n        newLinks.push(link);\n      else {\n        let permissable = false;\n        link.roles.forEach((perm)=>{\n          newState.roles.forEach((role)=>{\n            if(perm === role)\n              permissable = true;\n          });\n        });\n        if(permissable)\n          newLinks.push(link);\n      }\n    });\n    \n    newState.links = newLinks;\n    \n    return newState;\n  }\n  return state;\n};\n\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from './header/reducer';\n\nconst store = createStore(reducer);\n\nexport default store;","const parseJwt = (token) => {\n  let res = {};\n  if(token) {\n    try{\n      let base64Url = token.split('.')[1];\n      let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      let jsonPayload = decodeURIComponent(atob(base64).split('').map((c) => {\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n\n      res = JSON.parse(jsonPayload);\n    }catch(err){}\n  }\n  \n  return res;\n};\n\n\nexport default {parseJwt};","import React from 'react';\nimport './Header.scss';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Popover from '@material-ui/core/Popover';\nimport TextField from '@material-ui/core/TextField';\nimport styled, { ThemeProvider } from \"styled-components\";\nimport axios from 'axios';\nimport { withRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport store from '../../../stores/store';\nimport utils from '../../../services/utils.js';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\ninterface State {\n  anchorEl:any,\n  saEl:any,\n  headerVisible:boolean\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    roles: state.roles,\n    links: state.links\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateRoles: (d) => dispatch({type:'UPDATE_ROLES', val:d})\n  };\n};\n\nclass Header extends React.Component {\n  state:State;\n  private noHeaders = [\"/\", \"/verify\"];\n  \n  \n  constructor(public props) {\n    super(props);\n    this.state = {\n      anchorEl:null,\n      saEl:null,\n      headerVisible:false\n    };\n  }\n  \n  componentDidMount() {\n    this.unlisten = this.props.history.listen((location, action) => {\n      console.log(\"on route change\");\n      this.setHeaderVisibility();\n    });\n    \n    this.setHeaderVisibility();\n    console.log(\"---------\");\n    console.log(this.props);\n    \n    \n    const unsubscribe = store.subscribe(() => {\n      console.log(\"********************\");\n      console.log(\"store updated\");\n      console.log(this.props.roles);\n    });\n    \n    const token = localStorage.getItem(\"authToken\");\n    if(token) {\n      let parsed = utils.parseJwt(token);\n      if(parsed.role) {\n        let p:any = this.props;\n        p.updateRoles({ type: \"UPDATE_ROLES\", data: parsed.role});\n      }\n    }\n  }\n  \n  setHeaderVisibility() {\n    let path = this.props.location.pathname;\n    \n    if(this.noHeaders.indexOf(path) === -1)\n      this.setState({headerVisible:true});\n    else\n      this.setState({headerVisible:false});\n  }\n  \n  logout() {\n    localStorage.clear();\n    window.location.href = \"/\";\n  }\n  \n  unlisten() {\n    \n  }\n  \n  changePageProgramatically(e) {\n    e.preventDefault();\n    this.props.history.push(\"/\");\n  }\n  \n  openPopover(el) {\n    this.setState({\n      anchorEl:el,\n    });\n  }\n  \n  openSA(el) {\n    this.setState({\n      saEl:el,\n    });\n  }\n  \n  closeSA() {\n    this.setState({saEl:null});\n  }\n  \n  generateMenuButton(d) {\n    return <div>\n    <button type=\"button\" className=\"btn btn-outline-dark\" onClick={(event)=>this.openSA(event.currentTarget)}>{d.display}</button>\n    <Menu \n      anchorEl={this.state.saEl}\n      open={Boolean(this.state.saEl)}\n      onClose={(event)=>{this.closeSA();}}>\n      \n      {d.menuItems.map((item,index)=>{\n        return <MenuItem key={index} onClick={(event)=>{this.closeSA();}}><Link to={item.path}>{item.display}</Link></MenuItem>\n      })}\n    </Menu>\n    </div>;\n  }\n  \n  render() {\n    \n    return (\n        <header className={'mainHeader ' +(this.state.headerVisible ? \" \" : \"hidden \")}>\n          <div className=\"p-3\">\n            <div className=\"row align-items-center\">\n              <div className=\"col-md-12\">\n                <div className=\"row\">\n                  <nav className=\"col-auto linkWrapper\">\n                    <ul className=\"nav-pills pl-2 m-0\">\n                      {this.props.links && this.props.links.map((item,index)=>{\n                        return <li className=\"nav-item pr-3 mb-1 mt-1\" key={index}>\n                          {item.path && <Link to={item.path}><button type=\"button\" className=\"btn btn-outline-dark\">{item.display}</button></Link>}\n                          {!item.path && this.generateMenuButton(item)}\n                        </li>\n                      })}\n                    </ul>\n                  </nav>\n                  <div className=\"text-right flex-grow-1 px-3\">\n                    <div className=\"avatarWrapper\" onClick={(event)=>this.openPopover(event.currentTarget)}>\n                      <Avatar className=\"avatarButton\" src=\"/public/user.png\" />\n                    </div>\n                    <Popover\n                      anchorEl={this.state.anchorEl}\n                      open={Boolean(this.state.anchorEl)}\n                      onClose={(event)=>{this.setState({openLoginMenu:false,anchorEl:null});}}\n                      anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                      }}\n                      transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                      }}\n                    >\n                    <div className=\"list-group\">\n                      <div onClick={(event)=>this.logout()} className=\"list-group-item list-group-item-action list-group-item-light\">Logout</div>\n                    </div>\n                    </Popover>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </header>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Header));","import React from 'react';\nimport './LoginPage.scss';\nimport Spinner from '../../sharedComponents/functionalComponents/spinner/Spinner';\nimport Avatar from '@material-ui/core/Avatar';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withRouter, Link } from 'react-router-dom';\nimport utils from '../../services/utils.js';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateRoles: (d) => dispatch({type:'UPDATE_ROLES', val:d})\n  };\n};\n\ninterface State {\n  username:\"\",\n  password:\"\"\n}\n\nclass LoginPage extends React.Component {\n  public state:State;\n  private cancelTokenSource:any;\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      username:\"\",\n      password:\"\"\n    };\n  }\n  \n  componentDidMount() {\n    localStorage.clear();\n  }\n  \n  loginSubmit(e) {\n    e.preventDefault();\n    const url = \"/api/authenticate\";\n   \n    if(this.cancelTokenSource)\n      this.cancelTokenSource.cancel();\n    this.cancelTokenSource = axios.CancelToken.source();\n\n    axios.post(url, {\n      \"username\":this.state.username,\n      \"password\":this.state.password\n    }, {\n      cancelToken: this.cancelTokenSource.token\n    })\n    .then((d)=>{\n      const token = d.data.token;\n      localStorage.setItem(\"authToken\",token);\n      \n      let parsed = utils.parseJwt(token);\n      if(parsed.role) {\n        let p:any = this.props;\n        p.updateRoles({ type: \"UPDATE_ROLES\", data: parsed.role});\n      }\n      \n      const h:any = this.props;\n      const params = window.location.search;\n      console.log(\"$$$$$$$\")\n      console.log(parsed)\n      if(parsed.isVerified)\n        h.history.replace(\"/home\"+params);\n      else\n        h.history.replace(\"/verify\"+params);\n    })\n    .catch((error) => {\n      // handle error\n      console.error(error);\n    })\n    .then(() => {\n      // always executed\n    });\n  }\n  \n  render() {\n    return (\n      <section className=\"loginPage py-5\">\n       <div className=\"row\">\n        <div className=\"col-md-12\">\n          <h2>Log on</h2>\n          <div className=\"loginFormContainer\">\n            <div className=\"text-center\">\n              <Avatar className=\"avatar\" src=\"/public/user.png\" />\n            </div>\n            <form onSubmit={(e)=>this.loginSubmit(e)} className=\"loginForm p-3\">\n              <div>\n                <TextField required className=\"formField\" value={this.state.username} onChange={(e)=>{this.setState({username:e.target.value})}} label=\"User name\" variant=\"outlined\" />\n              </div>\n              <div className=\"mt-3\">\n                <TextField required className=\"formField\" value={this.state.password} onChange={(e)=>{this.setState({password:e.target.value})}} label=\"Password\" type=\"password\" variant=\"outlined\" />\n              </div>\n              <div className=\"mt-3 text-right\">\n                <Button className=\"long-button\" variant=\"contained\" color=\"primary\" type=\"submit\">Log on</Button>\n              </div>\n            </form>\n          </div>\n          <p className=\"text-center\">Forget <a href=\"#!\">User name</a> or <a href=\"#!\">Password</a></p>\n        </div>\n       </div>\n      </section>\n    );\n  }\n}\nconst cmp:any = LoginPage;\nexport default connect(null, mapDispatchToProps)(withRouter(cmp));","import React from 'react';\nimport Spinner from '../../sharedComponents/functionalComponents/spinner/Spinner';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nimport axios from 'axios';\n\ninterface State {\n  rows:any\n}\n\nclass UsersPage extends React.Component {\n  public state:State;\n  private lastQuery:string = \"\";\n  private cancelTokenSource:any;\n  private rows:any;\n  private useStyles:any;\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      rows:[]\n    };\n  }\n  \n  componentDidMount() {\n    console.log(localStorage.getItem(\"authToken\"))\n    if(!localStorage.getItem(\"authToken\"))\n      window.location.href = \"/\";\n      \n    this.loadUsers();\n  }\n  \n  loadUsers() {\n    const url = \"/api/superadmin/users\";\n    if(this.cancelTokenSource)\n      this.cancelTokenSource.cancel();\n    this.cancelTokenSource = axios.CancelToken.source();\n\n    axios.get(url, {\n      cancelToken: this.cancelTokenSource.token\n    })\n    .then((d)=>{\n      console.log(\"#######\");\n      console.log(d);\n      let users = d.data;\n      let rows:any = [];\n      users.forEach((item, index)=>{\n        console.log(item);\n        rows.push(this.createData(item.uuid, item.username, item.verified.toString(), item.active.toString(), item.superAdmin.toString(), item.roles));\n      });\n      \n      this.setState({rows:rows});\n      \n    })\n    .catch((error) => {\n      console.error(error);\n    })\n    .then(() => {\n    });\n  }\n\n  createData(uuid, username, verified, active, superAdmin, roles) {\n    return { uuid, username, verified, active, superAdmin, roles };\n  }\n  \n  render() {\n    return (\n      <section>\n       <div className=\"row\">\n        <div className=\"col-md-12\">\n          <TableContainer component={Paper}>\n            <Table className={''} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>UUID</TableCell>\n                  <TableCell align=\"left\">User name</TableCell>\n                  <TableCell align=\"left\">Verified</TableCell>\n                  <TableCell align=\"left\">Active</TableCell>\n                  <TableCell align=\"left\">Superadmin</TableCell>\n                  <TableCell align=\"left\">Roles</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.state.rows.map((row, index) => (\n                  <TableRow key={index}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {row.uuid}\n                    </TableCell>\n                    <TableCell align=\"left\">{row.username}</TableCell>\n                    <TableCell align=\"left\">{row.verified}</TableCell>\n                    <TableCell align=\"left\">{row.active}</TableCell>\n                    <TableCell align=\"left\">{row.superAdmin}</TableCell>\n                    <TableCell align=\"left\">{row.roles}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n       </div>\n      </section>\n    );\n  }\n}\n\nexport default UsersPage;","import React from 'react';\nimport Spinner from '../../sharedComponents/functionalComponents/spinner/Spinner';\n\nimport axios from 'axios';\n\ninterface State {\n}\n\nclass HomePage extends React.Component {\n  public state:State;\n  private lastQuery:string = \"\";\n  private cancelTokenSource:any;\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n  \n  componentDidMount() {\n    if(!localStorage.getItem(\"authToken\"))\n      window.location.href = \"/\";\n  }\n  \n  render() {\n    return (\n      <section>\n       <div className=\"row\">\n        <div className=\"col-md-12\">\n            \n        </div>\n       </div>\n      </section>\n    );\n  }\n}\n\nexport default HomePage;","import React from 'react';\nimport './VerifyPage.scss';\nimport Spinner from '../../sharedComponents/functionalComponents/spinner/Spinner';\nimport utils from '../../services/utils.js';\n\nimport axios from 'axios';\n\ninterface State {\n  loaded:boolean,\n  hasToken:boolean,\n  tokenVerified:boolean,\n  emailVerifyError:boolean\n}\n\nclass VerifyPage extends React.Component {\n  public state:State;\n  private lastQuery:string = \"\";\n  private cancelTokenSource:any;\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded:false,\n      hasToken:false,\n      tokenVerified:false,\n      emailVerifyError:false\n    };\n  }\n  \n  successFn() {\n    this.setState({tokenVerified:true});\n  }\n  \n  componentDidMount() {\n    let redirectUrl = \"/\", parts:any;\n    const authToken = localStorage.getItem(\"authToken\");\n    let token = \"\";\n    window.location.search.substring(1).split(\"&\").forEach((item) => {\n      parts = item.split(\"=\");\n      if(parts[0] === \"token\") {\n        token = parts[1];\n        redirectUrl += \"?token=\"+token;\n        this.setState({hasToken:true});\n        //TODO:call verify email service\n      }\n    });\n    if(!authToken) {\n      window.location.href = redirectUrl;\n    }\n    else {\n      //user logged in so verify the token\n      setTimeout(()=>{\n        this.setState({loaded:true});\n      },0);\n\n      let parsed = utils.parseJwt(authToken);\n      if(parsed.isVerified) {\n        this.successFn();\n      }\n      else {\n        const url = \"/api/verify?token=\"+token;\n        if(this.cancelTokenSource)\n          this.cancelTokenSource.cancel();\n        this.cancelTokenSource = axios.CancelToken.source();\n    \n        axios.get(url, {\n          cancelToken: this.cancelTokenSource.token\n        })\n        .then((d)=>{\n          this.successFn();\n        })\n        .catch((error) => {\n          console.error(error);\n          this.setState({emailVerifyError:true});\n        })\n        .then(() => {\n          \n        });\n      }\n    }\n  }\n  \n  render() {\n    return (\n      <section className=\"verifyPage\">\n       <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className={\"content \" + (this.state.loaded ? \"\" : \" hidden\")}>\n            {!this.state.emailVerifyError && this.state.hasToken && !this.state.tokenVerified && <div className=\"alert alert-secondary\" role=\"alert\">\n                <i>Your email has not been verified yet, please wait...</i>\n            </div>}\n            {!this.state.emailVerifyError && this.state.tokenVerified && <div className=\"alert alert-success\" role=\"alert\">\n                <strong>Success,</strong> <i>Your email has been verified!</i>\n            </div>}\n            {!this.state.emailVerifyError && this.state.tokenVerified && <img className=\"successImg\" src={process.env.PUBLIC_URL + \"/phone_login.png\"} />}\n            {this.state.emailVerifyError && <div className=\"alert alert-danger\" role=\"alert\">\n                There was an error verifying the token.\n            </div>}\n            {!this.state.hasToken && <div className=\"alert alert-danger\" role=\"alert\">\n                Error, token not found.\n            </div>}\n          </div>\n        </div>\n       </div>\n      </section>\n    );\n  }\n}\n\nexport default VerifyPage;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport axios from 'axios';\nimport Header from './sharedComponents/classComponents/header/Header';\nimport LoginPage from './pages/login/LoginPage';\nimport UsersPage from './pages/users/UsersPage';\nimport HomePage from './pages/home/HomePage';\nimport VerifyPage from './pages/verify/VerifyPage';\n\naxios.interceptors.request.use((request) => {\n  console.log(\"New axios request: \");\n  console.log(request);\n  request.headers['Access-Control-Allow-Origin'] = '*';\n  \n  let url:any = request.url;\n  if(url.match(/^\\/api\\//g) !== null) {\n    const token = localStorage.getItem(\"authToken\");\n    if(token)\n      request.headers['Authorization'] = 'Inovite ' + token;\n  }\n  \n  return request;\n});\n\naxios.interceptors.response.use((response) => {\n  return response;\n}, function (error) {\n  if(error.response.status === 403) { \n    localStorage.clear();\n    window.location.href = \"/\";\n  }\n  return Promise.reject(error);\n});\n\n\nclass App extends React.Component {\n  constructor(props:{}) {\n    super(props);\n    this.state = {};\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Header></Header>\n          <div className=\"container-fluid\">\n            <Switch>\n              <Route exact path = \"/\" \n                render={props => (\n                    <div className=\"row\">\n                      <div className=\"col-md-12 pt-3\">\n                        <LoginPage />\n                      </div>\n                    </div>\n                  )}>\n              </Route>\n              <Route path = \"/users\" \n                render={props => (\n                    <div className=\"row\">\n                      <div className=\"col-md-12 pt-3\">\n                        <UsersPage />\n                      </div>\n                    </div>\n                  )}>\n              </Route>\n              <Route path = \"/home\" \n                render={props => (\n                    <div className=\"row\">\n                      <div className=\"col-md-12 pt-3\">\n                        <HomePage />\n                      </div>\n                    </div>\n                  )}>\n              </Route>\n              <Route path = \"/verify\" \n                render={props => (\n                    <div className=\"row\">\n                      <div className=\"col-md-12 pt-3\">\n                        <VerifyPage />\n                      </div>\n                    </div>\n                  )}>\n              </Route>\n            </Switch>\n          </div>\n       </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\n\nimport store from './stores/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}