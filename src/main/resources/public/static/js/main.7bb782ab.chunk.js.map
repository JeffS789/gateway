{"version":3,"sources":["sharedComponents/classComponents/header/Header.tsx","pages/login/LoginPage.tsx","pages/users/UsersPage.tsx","pages/home/HomePage.tsx","App.tsx","serviceWorker.ts","stores/header/reducer.js","index.tsx"],"names":["Header","props","state","noHeaders","openLoginMenu","anchorEl","headerVisible","this","unlisten","history","listen","location","action","console","log","setHeaderVisibility","path","pathname","indexOf","setState","localStorage","clear","window","href","e","preventDefault","push","el","className","links","map","item","index","key","to","type","display","onClick","event","openPopover","currentTarget","Avatar","src","Popover","open","onClose","anchorOrigin","vertical","horizontal","transformOrigin","logout","React","Component","connect","searchResultsCount","dispatch","recordSearchResultsTotal","d","val","withRouter","cmp","cancelTokenSource","username","password","cancel","axios","CancelToken","source","post","cancelToken","token","then","data","setItem","replace","catch","error","onSubmit","loginSubmit","TextField","required","value","onChange","target","label","variant","Button","color","UsersPage","lastQuery","getItem","HomePage","interceptors","request","use","headers","url","match","response","status","Promise","reject","App","exact","render","Boolean","hostname","initialState","reducer","newState","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7bb782ab.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Popover from '@material-ui/core/Popover';\nimport TextField from '@material-ui/core/TextField';\nimport styled, { ThemeProvider } from \"styled-components\";\nimport axios from 'axios';\nimport { withRouter, Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\n\ninterface State {\n  openLoginMenu:boolean,\n  anchorEl:any,\n  headerVisible:boolean\n}\n\nconst mapStateToProps = state => {\n  return {\n    searchResultsCount: state.searchResultsCount,\n    links: state.links\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    recordSearchResultsTotal: (d) => dispatch({type:'STORE_SEARCH_RESULTS_COUNT', val:d})\n  };\n};\n\nclass Header extends React.Component {\n  state:State;\n  private noHeaders = [\"/\"];\n  \n  constructor(public props) {\n    super(props);\n    this.state = {\n      openLoginMenu:false,\n      anchorEl:null,\n      headerVisible:false\n    };\n  }\n  \n  componentDidMount() {\n    this.unlisten = this.props.history.listen((location, action) => {\n      console.log(\"on route change\");\n      this.setHeaderVisibility();\n    });\n    \n    this.setHeaderVisibility();\n    console.log(\"---------\");\n    console.log(this.props);\n  }\n  \n  setHeaderVisibility() {\n    let path = this.props.location.pathname;\n    \n    if(this.noHeaders.indexOf(path) === -1)\n      this.setState({headerVisible:true});\n    else\n      this.setState({headerVisible:false});\n  }\n  \n  logout() {\n    localStorage.clear();\n    window.location.href = \"/\";\n  }\n  \n  unlisten() {\n    \n  }\n  \n  changePageProgramatically(e) {\n    e.preventDefault();\n    this.props.history.push(\"/\");\n  }\n  \n  openPopover(el) {\n    this.setState({\n      anchorEl:el,\n      openLoginMenu:true\n    });\n  }\n  \n  render() {\n    \n    return (\n        <header className={'mainHeader ' +(this.state.headerVisible ? \" \" : \"hidden \")}>\n          <div className=\"p-3\">\n            <div className=\"row align-items-center\">\n              <div className=\"col-md-12\">\n                <div className=\"row\">\n                  <nav className=\"col-auto linkWrapper\">\n                    <ul className=\"nav-pills pl-2 m-0\">\n                      {this.props.links && this.props.links.map((item,index)=>{\n                        return <li className=\"nav-item pr-3 mb-1 mt-1\" key={index}>\n                          <Link to={item.path}><button type=\"button\" className=\"btn btn-outline-dark\">{item.display}</button></Link>\n                        </li>\n                      })}\n                    </ul>\n                  </nav>\n                  <div className=\"text-right flex-grow-1 px-3\">\n                    <div className=\"avatarWrapper\" onClick={(event)=>this.openPopover(event.currentTarget)}>\n                      <Avatar className=\"avatarButton\" src=\"/public/user.png\" />\n                    </div>\n                    <Popover\n                      anchorEl={this.state.anchorEl}\n                      open={this.state.openLoginMenu}\n                      onClose={(event)=>{this.setState({openLoginMenu:false,anchorEl:null});}}\n                      anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                      }}\n                      transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                      }}\n                    >\n                    <div className=\"list-group\">\n                      <div onClick={(event)=>this.logout()} className=\"list-group-item list-group-item-action list-group-item-light\">Logout</div>\n                    </div>\n                    </Popover>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </header>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Header));","import React from 'react';\nimport './LoginPage.scss';\nimport Spinner from '../../sharedComponents/functionalComponents/spinner/Spinner';\nimport Avatar from '@material-ui/core/Avatar';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withRouter, Link } from 'react-router-dom'\nimport axios from 'axios';\n\ninterface State {\n  username:\"\",\n  password:\"\"\n}\n\nclass LoginPage extends React.Component {\n  public state:State;\n  private cancelTokenSource:any;\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      username:\"\",\n      password:\"\"\n    };\n  }\n  \n  componentDidMount() {\n    localStorage.clear();\n  }\n  \n  loginSubmit(e) {\n    e.preventDefault();\n    const url = \"/api/authenticate\";\n   \n    if(this.cancelTokenSource)\n      this.cancelTokenSource.cancel();\n    this.cancelTokenSource = axios.CancelToken.source();\n\n    axios.post(url, {\n      \"username\":this.state.username,\n      \"password\":this.state.password\n    }, {\n      cancelToken: this.cancelTokenSource.token\n    })\n    .then((d)=>{\n      const token = d.data.token;\n      localStorage.setItem(\"authToken\",token);\n      const h:any = this.props;\n      h.history.replace(\"/home\");\n    })\n    .catch(function (error) {\n      // handle error\n      console.error(error);\n    })\n    .then(function () {\n      // always executed\n    });\n  }\n  \n  render() {\n    return (\n      <section className=\"loginPage py-5\">\n       <div className=\"row\">\n        <div className=\"col-md-12\">\n          <h2>Log on</h2>\n          <div className=\"loginFormContainer\">\n            <div className=\"text-center\">\n              <Avatar className=\"avatar\" src=\"/public/user.png\" />\n            </div>\n            <form onSubmit={(e)=>this.loginSubmit(e)} className=\"loginForm p-3\">\n              <div>\n                <TextField required className=\"formField\" value={this.state.username} onChange={(e)=>{this.setState({username:e.target.value})}} label=\"User name\" variant=\"outlined\" />\n              </div>\n              <div className=\"mt-3\">\n                <TextField required className=\"formField\" value={this.state.password} onChange={(e)=>{this.setState({password:e.target.value})}} label=\"Password\" type=\"password\" variant=\"outlined\" />\n              </div>\n              <div className=\"mt-3 text-right\">\n                <Button className=\"long-button\" variant=\"contained\" color=\"primary\" type=\"submit\">Log on</Button>\n              </div>\n            </form>\n          </div>\n          <p className=\"text-center\">Forget <a href=\"#!\">User name</a> or <a href=\"#!\">Password</a></p>\n        </div>\n       </div>\n      </section>\n    );\n  }\n}\nconst cmp:any = LoginPage;\nexport default withRouter(cmp);","import React from 'react';\nimport Spinner from '../../sharedComponents/functionalComponents/spinner/Spinner';\n\nimport axios from 'axios';\n\ninterface State {\n}\n\nclass UsersPage extends React.Component {\n  public state:State;\n  private lastQuery:string = \"\";\n  private cancelTokenSource:any;\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n    \n    \n  }\n  \n  componentDidMount() {\n    if(!localStorage.getItem(\"authToken\"))\n      window.location.href = \"/\";\n  }\n  \n  render() {\n    return (\n      <section>\n       <div className=\"row\">\n        <div className=\"col-md-12\">\n\n        </div>\n       </div>\n      </section>\n    );\n  }\n}\n\nexport default UsersPage;","import React from 'react';\nimport Spinner from '../../sharedComponents/functionalComponents/spinner/Spinner';\n\nimport axios from 'axios';\n\ninterface State {\n}\n\nclass HomePage extends React.Component {\n  public state:State;\n  private lastQuery:string = \"\";\n  private cancelTokenSource:any;\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n  \n  componentDidMount() {\n    if(!localStorage.getItem(\"authToken\"))\n      window.location.href = \"/\";\n  }\n  \n  render() {\n    return (\n      <section>\n       <div className=\"row\">\n        <div className=\"col-md-12\">\n            \n        </div>\n       </div>\n      </section>\n    );\n  }\n}\n\nexport default HomePage;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.scss';\nimport axios from 'axios';\nimport Header from './sharedComponents/classComponents/header/Header';\nimport LoginPage from './pages/login/LoginPage';\nimport UsersPage from './pages/users/UsersPage';\nimport HomePage from './pages/home/HomePage';\n\naxios.interceptors.request.use((request) => {\n  console.log(\"New axios request: \");\n  console.log(request);\n  request.headers['Access-Control-Allow-Origin'] = '*';\n  \n  let url:any = request.url;\n  if(url.match(/^api\\//g) !== null) {\n    const token = localStorage.getItem(\"authToken\");\n    request.headers['Authorization'] = ' ' + token;\n  }\n  \n  return request;\n});\n\naxios.interceptors.response.use((response) => {\n  return response;\n}, function (error) {\n  if(error.response.status === 403) { \n    localStorage.clear();\n    window.location.href = \"/\";\n  }\n  return Promise.reject(error);\n});\n\n\nclass App extends React.Component {\n  constructor(props:{}) {\n    super(props);\n    this.state = {};\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Header></Header>\n          <div className=\"container-fluid\">\n            <Switch>\n              <Route exact path = \"/\" \n                render={props => (\n                    <div className=\"row\">\n                      <div className=\"col-md-12 pt-3\">\n                        <LoginPage />\n                      </div>\n                    </div>\n                  )}>\n              </Route>\n              <Route path = \"/users\" \n                render={props => (\n                    <div className=\"row\">\n                      <div className=\"col-md-12 pt-3\">\n                        <UsersPage />\n                      </div>\n                    </div>\n                  )}>\n              </Route>\n              <Route path = \"/home\" \n                render={props => (\n                    <div className=\"row\">\n                      <div className=\"col-md-12 pt-3\">\n                        <HomePage />\n                      </div>\n                    </div>\n                  )}>\n              </Route>\n            </Switch>\n          </div>\n       </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n    searchResultsCount:0,\n    links:[{\n      \"path\":\"/home\",\n      \"id\":\"HOME\",\n      \"display\":\"⿳\"\n    },{\n      \"path\":\"/users\",\n      \"id\":\"USERS\",\n      \"display\":\"Users\"\n    }]\n};\n\nconst reducer = (state = initialState, action) => {\n  \n  console.log(\"reducing: \")\n  console.log(action);\n  console.log(state);\n  console.log(\"+++++++++++++++++\")\n  \n  if(action.type === 'STORE_SEARCH_RESULTS_COUNT') {\n    let newState = {...state};\n    newState.searchResultsCount = action.val;\n    return newState;\n  }\n  return state;\n};\n\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducer from './stores/header/reducer.js';\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}><App /></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}